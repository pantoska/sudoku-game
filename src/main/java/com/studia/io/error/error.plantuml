@startuml

title __ERROR's Class Diagram__\n

  package com.studia.io {
    package com.studia.io.error {
      class InvalidDataInputEx {
          + InvalidDataInputEx()
      }
    }
  }

  package com.studia.io {
      package com.studia.io.controller {
        class BoardController {
            - alert : Alert
            {static} - message : Alert
            ~ canvas : Canvas
            ~ button1 : Button
            ~ button2 : Button
            ~ button3 : Button
            ~ button4 : Button
            ~ button5 : Button
            ~ button6 : Button
            ~ button7 : Button
            ~ button8 : Button
            ~ button9 : Button
            ~ buttonClear : Button
            ~ menuButton : MenuButton
            ~ easyMode : MenuItem
            ~ mediumMode : MenuItem
            ~ hardMode : MenuItem
            - x : int
            - y : int
            - sizeOfCanvas : int
            - selectedRow : int
            - selectedColumn : int
            - start : boolean
            - state : boolean
            + initialize()
            - drawGame()
            + mouseClicked()
            - drawFilledBoard()
            + buttonOnePressed()
            + buttonTwoPressed()
            + buttonThreePressed()
            + buttonFourPressed()
            + buttonFivePressed()
            + buttonSixPressed()
            + buttonSevenPressed()
            + buttonEightPressed()
            + buttonNinePressed()
            + buttonClearPressed()
            - enterNumberInput()
            + setModeEasy()
            + setModeMedium()
            + setModeHard()
            - setMode()
            + message()
            + messageEndGame()
        }
      }
    }


    package com.studia.io {
      package com.studia.io.controller {
        class BoardGenerator {
            - clearCells : int
            - board : int[][]
            - userBoard : int[][]
            - currentBoard : int[][]
            {static} - random : Random
            + getBoard()
            + getDefaultBoard()
            + getUserBoard()
            - setMode()
            - setFullBoard()
            + clearCell()
            - clearRandomCells()
            + resetUserBoard()
            + modifyCells()
            + checkStatus()
            + isEndOfGame()
            + resetBoard()
        }
      }
    }



package com.studia.io {
    package com.studia.io.model {
      class BoardProvider {
          + getBoard()
          + getDefaultBoard()
          + getUserBoard()
          + modifyCells()
          + clearCell()
          + clearUserBoard()
          + isEndOfGame()
          + checkStatus()
      }
    }
  }


  package com.studia.io {
    package com.studia.io.model {
      class BoardRepository {
          {static} + SIZE : int
          - board : int[][]
          + BoardRepository()
          + setBoard()
          + getBoard()
      }
    }
  }


  package com.studia.io {
    package com.studia.io.model {
      enum GameMode {
        EASY
        MEDIUM
        HARD
        mode
      }
    }
  }


  package com.studia.io {
    package com.studia.io.model {
      class UserBoardRepository {
          - board : int[][]
          + UserBoardRepository()
          + setBoard()
          + getBoard()
      }
    }
  }



 package com.studia.io {
    package com.studia.io.service {
      class BoardService {
          + BoardService()
          + generateBoard()
          + getUserBoard()
          + userInput()
          + getBoard()
          + clearCell()
          + clearUserBoard()
          + endOfGame()
          + checkStatus()
      }
    }
  }





  package com.studia.io {
    package com.studia.io.validation {
      class BoardValidation {
          + checkRow()
          + checkColumn()
          + checkSquare()
          + checkInput()
      }
    }
  }

  BoardProvider o-- BoardGenerator : boardGenerator

  BoardService o-- BoardRepository : boardRepository
  BoardService o-- UserBoardRepository : userBoardRepository
  BoardService o-- BoardProvider : boardProvider


   BoardController -up-|> Initializable
   BoardController o-- BoardService : boardService
   BoardGenerator o-- BoardValidation : boardValidation

right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
